name: Free Flight Booking CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  JAVA_VERSION: "17"
  NODE_VERSION: "18"

jobs:
  # Backend CI/CD (Railway)
  backend:
    name: Backend - Build, Test & Deploy
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: flightbooking
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: "maven"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test backend
        working-directory: ./backend
        run: |
          mvn clean compile test
          mvn package -DskipTests

      - name: Run backend smoke tests
        working-directory: ./backend
        run: mvn test -Dtest=BackendSmokeTest
        continue-on-error: true

      - name: Deploy to Railway (Backend)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && secrets.RAILWAY_TOKEN != ''
        uses: railway/deploy@v1.0.0
        with:
          service: flight-booking-backend
          token: ${{ secrets.RAILWAY_TOKEN }}

      - name: Skip Railway deployment (no token)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && secrets.RAILWAY_TOKEN == ''
        run: echo "Skipping Railway deployment - RAILWAY_TOKEN not configured"

  # Frontend CI/CD
  frontend:
    name: Frontend - Build, Test & Deploy
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend1/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend1
        run: npm ci

      - name: Run frontend unit tests
        working-directory: ./frontend1
        run: npm test -- --watch=false --browsers=ChromeHeadless
        continue-on-error: true

      - name: Build frontend
        working-directory: ./frontend1
        run: npm run build

      - name: Install Playwright browsers
        working-directory: ./frontend1
        run: npx playwright install --with-deps

      - name: Run smoke tests
        working-directory: ./frontend1
        run: npx playwright test e2e/tests/smoke.spec.ts --reporter=list
        env:
          CI: true

      - name: Run regression tests
        working-directory: ./frontend1
        run: |
          npx playwright test e2e/tests/regression-customers.spec.ts --reporter=list
          npx playwright test e2e/tests/regression-flights.spec.ts --reporter=list
          npx playwright test e2e/tests/regression-bookings.spec.ts --reporter=list
          npx playwright test e2e/tests/regression-reports.spec.ts --reporter=list
        env:
          CI: true
        continue-on-error: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend1/playwright-report/
          retention-days: 30

  # Integration Tests
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: flightbooking
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend1/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend1
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend1
        run: npx playwright install --with-deps

      - name: Start backend service
        working-directory: ./backend
        run: |
          mvn spring-boot:run -Dspring-boot.run.profiles=test &
          sleep 30

      - name: Run end-to-end tests
        working-directory: ./frontend1
        run: npx playwright test e2e/tests/smoke.spec.ts --reporter=list
        env:
          CI: true
