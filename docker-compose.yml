services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: flight-booking-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: flightbooking
      MYSQL_USER: flightuser
      MYSQL_PASSWORD: flightpass
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/src/main/resources/data.sql:/docker-entrypoint-initdb.d/02-data.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flight-booking-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/flightbooking?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: flightuser
      SPRING_DATASOURCE_PASSWORD: flightpass
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application
  frontend:
    build:
      context: ./frontend1
      dockerfile: Dockerfile
    container_name: flight-booking-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Jenkins Master
  jenkins-server:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins-server
    user: root                             # so Jenkins can talk to the socket
    ports:
      - "8085:8080"                        # Jenkins UI
      - "50000:50000"                      # Jenkins agent port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock   # mount host's Docker socket
      - jenkins_home:/var/jenkins_home             # persist Jenkins data
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Xmx1g -Xms512m -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+OptimizeStringConcat -XX:+HeapDumpOnOutOfMemoryError -XX:MaxGCPauseMillis=200 -XX:+DisableExplicitGC
      - JENKINS_UC=https://updates.jenkins.io
      - JENKINS_UC_DOWNLOAD=https://updates.jenkins.io/download
    restart: unless-stopped
    mem_limit: 1.5g
    mem_reservation: 512m
    cpus: 1.0
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  mysql_data: 
  jenkins_home: